<library path="lib/libfranka_controller">
  <class name="franka_controller/JointVelocityExampleController" type="franka_controller::JointVelocityExampleController" base_class_type="controller_interface::ControllerBase">
    <description>
      A controller that executes a short motion based on joint velocities to demonstrate correct usage
    </description>
  </class>
  <class name="franka_controller/JointPositionExampleController" type="franka_controller::JointPositionExampleController" base_class_type="controller_interface::ControllerBase">
    <description>
      A controller that executes a short motion based on joint positions to demonstrate correct usage
    </description>
  </class>
  <class name="franka_controller/CartesianPoseExampleController" type="franka_controller::CartesianPoseExampleController" base_class_type="controller_interface::ControllerBase">
    <description>
      A controller that executes a short motion based on cartesian poses to demonstrate correct usage
    </description>
  </class>
  <class name="franka_controller/CartesianVelocityExampleController" type="franka_controller::CartesianVelocityExampleController" base_class_type="controller_interface::ControllerBase">
    <description>
      A controller that executes a short motion based on cartesian velocities to demonstrate correct usage
    </description>
  </class>
  <class name="franka_controller/ElbowExampleController" type="franka_controller::ElbowExampleController" base_class_type="controller_interface::ControllerBase">
    <description>
      A controller that executes a short motion based on cartesian poses and elbow to demonstrate correct usage
    </description>
  </class>
  <class name="franka_controller/ModelExampleController" type="franka_controller::ModelExampleController" base_class_type="controller_interface::ControllerBase">
    <description>
      A controller that evaluates and prints the dynamic model of Franka
    </description>
  </class>
  <class name="franka_controller/JointImpedanceExampleController" type="franka_controller::JointImpedanceExampleController" base_class_type="controller_interface::ControllerBase">
    <description>
      A controller that tracks a cartesian path with a joint impedance controller that compensates coriolis torques. The torque commands are compared to measured torques in Console outputs.
    </description>
  </class>
  <class name="franka_controller/CartesianImpedanceExampleController" type="franka_controller::CartesianImpedanceExampleController" base_class_type="controller_interface::ControllerBase">
    <description>
      A controller that renders a spring damper system in cartesian space. Compliance parameters and the equilibrium pose can be modified online with dynamic reconfigure and an interactive marker respectively.
    </description>
  </class>
  <class name="franka_controller/ForceExampleController" type="franka_controller::ForceExampleController" base_class_type="controller_interface::ControllerBase">
    <description>
      A PI controller that applies a force corresponding to a user-provided desired mass in the z axis. The desired mass value can be modified online with dynamic reconfigure.
    </description>
  </class>
  <class name="franka_controller/DualArmCartesianImpedanceExampleController" type="franka_controller::DualArmCartesianImpedanceExampleController" base_class_type="controller_interface::ControllerBase">
      <description>
          A controller that renders Cartesian impedance based tracking of separate target poses for 2 panda arms.
      </description>
  </class>
</library>
